{"version":3,"sources":["logic/index.tsx","reducer/index.tsx","components/Board.tsx","constants.tsx","App.tsx","serviceWorker.js","components/Piece.tsx","sagas.tsx","index.tsx"],"names":["pieceTypes","genPieceType","Math","floor","random","length","merge","content","piece","mergedContent","map","row","slice","pieceCells","getCells","i","j","y","x","Container","styled","table","_templateObject","Cell","td","_templateObject2","Board","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this$props","react_default","a","createElement","reverse","cell","style","backgroundColor","width","height","React","PureComponent","BOARD_WIDTH","BOARD_HEIGHT","newGame","createAction","setupGame","resolve","nextPiece","endGame","movePiece","deltaX","deltaY","nextPieceEnters","rotate","land","score","emptyContent","push","emptyContentSmall","mapDispatchToProps","App","_this","keyDown","throttle","bind","assertThisInitialized","document","addEventListener","removeEventListener","ev","keyCode","className","components_Board","padding","display","flexDirection","alignItems","margin","textAlign","onClick","Component","connect","state","Boolean","window","location","hostname","match","Piece","type","arguments","undefined","newState","newGameSaga","progressGameSaga","rootSaga","pieceType","nextPieceType","progressTask","regenerator_default","wrap","_context","prev","next","put","getType","payload","fork","sent","take","cancel","stop","_marked","data","landed","_nextPiece","_piece","collided","_i","_j","_context2","delay","select","_marked2","_context3","takeEvery","_marked3","sagaMiddleware","createSagaMiddleware","store","createStore","action","objectSpread","cells","move","rotatedPiece","count","scoringRows","full","newContent","indexOf","applyMiddleware","logger","run","ReactDOM","render","es","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f3e00390.chunk.js","sourcesContent":["import Piece, { Type as PieceTypes } from '../components/Piece';\n\nconst pieceTypes = ['i', 'j', 'l', 'o', 's', 't', 'z'];\n\nexport function genPieceType(): PieceTypes {\n  const pieceType = pieceTypes[Math.floor(Math.random() * pieceTypes.length)];\n  return pieceType as PieceTypes;\n}\n\nexport function merge(content: boolean[][], piece?: Piece) {\n  if (!piece) {\n    return content;\n  }\n\n  const mergedContent = content.map(row => row.slice());\n  const pieceCells = piece.getCells();\n\n  for (let i = 0; i < pieceCells.length; i += 1) {\n    for (let j = 0; j < pieceCells[0].length; j += 1) {\n      mergedContent[piece.y + i][piece.x + j] =\n        pieceCells[i][j] || content[piece.y + i][piece.x + j];\n    }\n  }\n\n  return mergedContent;\n}\n","import { ActionType, createAction, getType } from 'typesafe-actions';\nimport Piece from '../components/Piece';\nimport { BOARD_HEIGHT, BOARD_WIDTH } from '../constants';\nimport { merge } from '../logic';\n\nexport const newGame = createAction('newGame');\n\nexport const setupGame = createAction('setupGame', resolve => (piece: Piece, nextPiece: Piece) =>\n  resolve({ piece, nextPiece }),\n);\n\nexport const endGame = createAction('endGame');\n\nexport const movePiece = createAction('movePiece', resolve => (deltaX: number, deltaY: number) =>\n  resolve({ deltaX, deltaY }),\n);\n\nexport const nextPieceEnters = createAction(\n  'nextPiece',\n  resolve => (nextPiece: Piece, piece: Piece) => resolve({ nextPiece, piece }),\n);\n\nexport const rotate = createAction('rotate');\n\nexport const land = createAction('land');\n\nexport const score = createAction('score');\n\nexport interface State {\n  content: boolean[][];\n  piece?: Piece;\n  nextPiece?: Piece;\n  score: number;\n}\n\nconst actions = { newGame, setupGame, movePiece, land, nextPieceEnters, rotate, score };\n\ntype Action = ActionType<typeof actions>;\n\nconst emptyContent: boolean[][] = [];\nfor (let i = 0; i < BOARD_HEIGHT; i += 1) {\n  const row: boolean[] = [];\n  for (let j = 0; j < BOARD_WIDTH; j += 1) {\n    row.push(false);\n  }\n\n  emptyContent.push(row);\n}\n\nexport default function(state: State = { content: emptyContent, score: 0 }, action: Action) {\n  switch (action.type) {\n    case getType(setupGame): {\n      return {\n        ...state,\n        content: emptyContent,\n        score: 0,\n        piece: action.payload.piece,\n        nextPiece: action.payload.nextPiece,\n      };\n    }\n    case getType(movePiece): {\n      let piece = state.piece;\n      if (piece) {\n        const cells = piece.getCells();\n        let move = true;\n        for (let i = 0; i < cells.length && move; i += 1) {\n          for (let j = 0; j < cells[0].length && move; j += 1) {\n            if (\n              piece.y + i + action.payload.deltaY < 0 ||\n              piece.x + j + action.payload.deltaX < 0 ||\n              piece.x + j + action.payload.deltaX >= BOARD_WIDTH\n            ) {\n              move = false;\n            } else if (\n              state.content[piece.y + i + action.payload.deltaY]\n                [piece.x + j + action.payload.deltaX] &&\n              cells[i][j]\n            ) {\n              move = false;\n            }\n          }\n        }\n\n        if (move) {\n          piece = piece.move(action.payload.deltaX, action.payload.deltaY);\n        }\n      }\n\n      return {\n        ...state,\n        piece,\n      };\n    }\n    case getType(land): {\n      const content = merge(state.content, state.piece);\n      return { ...state, content };\n    }\n    case getType(nextPieceEnters): {\n      return {\n        ...state,\n        piece: action.payload.piece,\n        nextPiece: action.payload.nextPiece,\n      };\n    }\n    case getType(rotate): {\n      let piece = state.piece;\n      if (piece) {\n        const rotatedPiece = piece.rotate();\n        const cells = rotatedPiece.getCells();\n        let rotate = true;\n        for (let i = 0; i < cells.length && rotate; i += 1) {\n          for (let j = 0; j < cells[0].length && rotate; j += 1) {\n            if (\n              rotatedPiece.y + i >= BOARD_HEIGHT ||\n              rotatedPiece.x + j < 0 ||\n              rotatedPiece.x + j >= BOARD_WIDTH\n            ) {\n              rotate = false;\n            } else if (state.content[rotatedPiece.y + i][rotatedPiece.x + j] && cells[i][j]) {\n              rotate = false;\n            }\n          }\n        }\n\n        if (rotate) {\n          piece = rotatedPiece;\n        }\n      }\n\n      return {\n        ...state,\n        piece,\n      };\n    }\n    case getType(score): {\n      const content = state.content;\n      let count = 0;\n      const scoringRows = [];\n      for (let i = 0; i < BOARD_HEIGHT; i += 1) {\n        const row = content[i];\n        let full = true;\n        for (let j = 0; j < row.length && full; j += 1) {\n          if (!row[j]) {\n            full = false;\n          }\n        }\n\n        if (full) {\n          count += 1;\n          scoringRows.push(i);\n        }\n      }\n\n      let score = state.score;\n      if (count === 1) {\n        score += 10;\n      } else if (count === 2) {\n        score += 20;\n      } else if (count === 3) {\n        score += 40;\n      } else if (count === 4) {\n        score += 80;\n      }\n\n      const newContent = [] as boolean[][];\n      for (let i = 0; i < content.length; i += 1) {\n        if (scoringRows.indexOf(i) < 0) {\n          newContent.push(content[i]);\n        }\n      }\n      for (let i = 0; i < scoringRows.length; i += 1) {\n        const row = [] as boolean[];\n        for (let j = 0; j < BOARD_WIDTH; j += 1) {\n          row.push(false);\n        }\n        newContent.push(row);\n      }\n\n      return {\n        ...state,\n        score,\n        content: newContent,\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport Piece from './Piece';\nimport { merge } from '../logic';\n\nconst Container = styled.table`\n  border-collapse: collapse;\n`;\n\nconst Cell = styled.td`\n  border: 1px solid grey;\n  width: 25px;\n  height: 25px;\n  padding: 0;\n`;\n\ninterface BoardProps {\n  piece?: Piece;\n  content: boolean[][];\n}\n\nclass Board extends React.PureComponent<BoardProps, {}> {\n  constructor(props: BoardProps) {\n    super(props);\n  }\n\n  render() {\n    const { piece, content } = this.props;\n\n    const mergedContent = merge(content, piece);\n\n    return (\n      <Container>\n        <tbody>\n          {mergedContent.reverse().map(row => {\n            return (\n              <tr>\n                {row.map(cell => {\n                  return (\n                    <Cell>\n                      {cell ? (\n                        <div style={{ backgroundColor: 'pink', width: '100%', height: '100%' }} />\n                      ) : null}\n                    </Cell>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </Container>\n    );\n  }\n}\n\nexport default Board;\n","export const BOARD_WIDTH = 10;\nexport const BOARD_HEIGHT = 20;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Board from './components/Board';\nimport { throttle } from 'lodash';\nimport { newGame, State, movePiece, rotate } from './reducer';\nimport { connect } from 'react-redux';\n\nconst emptyContentSmall: boolean[][] = [];\nfor (let i = 0; i < 2; i += 1) {\n  const row: boolean[] = [];\n  for (let j = 0; j < 4; j += 1) {\n    row.push(false);\n  }\n\n  emptyContentSmall.push(row);\n}\n\nfunction mapStateToProps(state: State) {\n  return {\n    content: state.content,\n    piece: state.piece,\n    nextPiece: state.nextPiece,\n    score: state.score,\n  };\n}\n\nconst mapDispatchToProps = { newGame, movePiece, rotate };\n\ntype DispatchProps = typeof mapDispatchToProps;\n\ninterface AppProps extends ReturnType<typeof mapStateToProps>, DispatchProps {}\n\nclass App extends Component<AppProps, {}> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.keyDown = throttle(this.keyDown.bind(this), 100);\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.keyDown);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.keyDown);\n  }\n\n  keyDown(ev: KeyboardEvent) {\n    if (ev.keyCode === 37) {\n      this.props.movePiece(-1, 0);\n    } else if (ev.keyCode === 39) {\n      this.props.movePiece(1, 0);\n    } else if (ev.keyCode === 40) {\n      this.props.movePiece(0, -1);\n    } else if (ev.keyCode === 38) {\n      this.props.rotate();\n    }\n  }\n\n  render() {\n    const { content, piece, nextPiece, score } = this.props;\n    return (\n      <div className=\"App\">\n        <Board piece={piece} content={content} />\n        <div\n          style={{\n            padding: '20px',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <div style={{ margin: '25px' }}>Score: {score}</div>\n          <div>\n            <div style={{ margin: '15px', textAlign: 'center' }}>Next Piece:</div>\n            <Board piece={nextPiece} content={emptyContentSmall} />\n          </div>\n          <div style={{ margin: '25px' }}>\n            <button onClick={this.props.newGame}>New Game</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export type Type = 'i' | 'j' | 'l' | 'o' | 's' | 't' | 'z';\ntype State = 0 | 1 | 2 | 3;\n\nclass Piece {\n  readonly x: number;\n  readonly y: number;\n  readonly type: Type;\n  readonly state: State;\n\n  constructor(x: number, y: number, type: Type, state : State = 0) {\n    this.x = x;\n    this.y = y;\n    this.type = type;\n    this.state = state;\n  }\n\n  public rotate() {\n    let newState : State = 0;\n    if (this.state === 0) {\n      newState = 3;\n    } else if (this.state === 1) {\n      newState = 0;\n    } else if (this.state === 2) {\n      newState = 1;\n    } else if (this.state === 3) {\n      newState = 2;\n    }\n\n    return new Piece(this.x, this.y, this.type, newState);\n  }\n\n  public move(deltaX: number, deltaY: number) {\n    return new Piece(this.x + deltaX, this.y + deltaY, this.type, this.state);\n  }\n\n  public getCells(): boolean[][] {\n    if (this.type === 'i') {\n      if (this.state === 1 || this.state === 3) {\n        return [[true], [true], [true], [true]];\n      }\n      return [[true, true, true, true]];\n    }\n    if (this.type === 'j') {\n      if (this.state === 0) {\n        return [[true, true, true], [false, false, true]];\n      }\n      if (this.state === 1) {\n        return [[false, true], [false, true], [true, true]];\n      }\n      if (this.state === 2) {\n        return [[true, false, false], [true, true, true]];\n      }\n      return [[true, true], [true, false], [true, false]];\n    }\n    if (this.type === 'l') {\n      if (this.state === 0) {\n        return [[true, true, true], [true, false, false]];\n      }\n      if (this.state === 1) {\n        return [[true, true], [false, true], [false, true]];\n      }\n      if (this.state === 2) {\n        return [[false, false, true], [true, true, true]];\n      }\n      return [[true, false], [true, false], [true, true]];\n    }\n    if (this.type === 'o') {\n      return [[true, true], [true, true]];\n    }\n    if (this.type === 's') {\n      if (this.state === 0 || this.state === 2) {\n        return [[false, true, true], [true, true, false]];\n      }\n      if (this.state === 1 || this.state === 3) {\n        return [[true, false], [true, true], [false, true]];\n      }\n    }\n    if (this.type === 'z') {\n      if (this.state === 0 || this.state === 2) {\n        return [[true, true, false], [false, true, true]];\n      }\n      if (this.state === 1 || this.state === 3) {\n        return [[false, true], [true, true], [true, false]];\n      }\n    }\n    if (this.type === 't') {\n      if (this.state === 0) {\n        return [[true, true, true], [false, true, false]];\n      }\n      if (this.state === 1) {\n        return [[false, true], [true, true], [false, true]];\n      }\n      if (this.state === 2) {\n        return [[false, true, false], [true, true, true]];\n      }\n      return [[true, false], [true, true], [true, false]];\n    }\n    return [[]];\n  }\n}\n\nexport default Piece;\n","import { SagaIterator, delay } from 'redux-saga';\nimport { takeEvery, put, fork, take, cancel, call, select } from 'redux-saga/effects';\nimport { getType } from 'typesafe-actions';\nimport {\n  newGame,\n  setupGame,\n  endGame,\n  movePiece,\n  State,\n  nextPieceEnters,\n  land,\n  score,\n} from './reducer';\nimport { genPieceType } from './logic';\nimport Piece from './components/Piece';\nimport { BOARD_WIDTH, BOARD_HEIGHT } from './constants';\n\nfunction* newGameSaga(): SagaIterator {\n  const pieceType = genPieceType();\n  let piece: Piece;\n  if (pieceType === 'i') {\n    piece = new Piece(BOARD_WIDTH / 2 - 2, BOARD_HEIGHT - 1, pieceType);\n  } else {\n    piece = new Piece(BOARD_WIDTH / 2 - 1, BOARD_HEIGHT - 2, pieceType);\n  }\n\n  const nextPieceType = genPieceType();\n  let nextPiece: Piece;\n  if (nextPieceType === 'i') {\n    nextPiece = new Piece(0, 0, nextPieceType);\n  } else {\n    nextPiece = new Piece(1, 0, nextPieceType);\n  }\n\n  yield put({ type: getType(setupGame), payload: { piece, nextPiece } });\n\n  const progressTask = yield fork(progressGameSaga);\n  yield take(getType(endGame));\n\n  yield cancel(progressTask);\n}\n\nfunction* progressGameSaga(): SagaIterator {\n  while (true) {\n    yield call(delay, 500);\n\n    let data: { content: boolean[][]; piece: Piece; nextPiece: Piece } = yield select(\n      (state: State) => {\n        return { content: state.content, piece: state.piece, nextPiece: state.nextPiece };\n      },\n    );\n\n    let pieceCells = data.piece.getCells();\n    let landed = false;\n    for (let i = 0; i < pieceCells.length && !landed; i += 1) {\n      for (let j = 0; j < pieceCells[0].length && !landed; j += 1) {\n        if (data.piece.y - 1 + i < 0) {\n          landed = true;\n        } else if (pieceCells[i][j] && data.content[data.piece.y - 1 + i][data.piece.x + j]) {\n          landed = true;\n        }\n      }\n    }\n\n    if (landed) {\n      const nextPieceType = genPieceType();\n      let nextPiece: Piece;\n      if (nextPieceType === 'i') {\n        nextPiece = new Piece(0, 0, nextPieceType);\n      } else {\n        nextPiece = new Piece(1, 0, nextPieceType);\n      }\n\n      let piece: Piece;\n      if (data.nextPiece.type === 'i') {\n        piece = new Piece(BOARD_WIDTH / 2 - 2, BOARD_HEIGHT - 1, data.nextPiece.type);\n      } else {\n        piece = new Piece(BOARD_WIDTH / 2 - 1, BOARD_HEIGHT - 2, data.nextPiece.type);\n      }\n\n      yield put({ type: getType(land) });\n\n      yield put({ type: getType(score) });\n\n      yield put({ type: getType(nextPieceEnters), payload: { nextPiece, piece } });\n\n      // check if new piece collides with current cells\n      data = yield select((state: State) => {\n        return { content: state.content, piece: state.piece, nextPiece: state.nextPiece };\n      });\n      let collided = false;\n      pieceCells = data.piece.getCells();\n      for (let i = 0; i < pieceCells.length && !collided; i += 1) {\n        for (let j = 0; j < pieceCells[0].length && !collided; j += 1) {\n          if (data.content[data.piece.y + i][data.piece.x + j]) {\n            collided = true;\n          }\n        }\n      }\n      if (collided) {\n        yield put({ type: getType(endGame) });\n      }\n    } else {\n      yield put({ type: getType(movePiece), payload: { deltaX: 0, deltaY: -1 } });\n    }\n  }\n}\n\nexport default function* rootSaga(): SagaIterator {\n  yield takeEvery(getType(newGame), newGameSaga);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport reducer from './reducer';\nimport { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './sagas';\nimport logger from 'redux-logger';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(reducer, applyMiddleware(sagaMiddleware, logger));\n\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}